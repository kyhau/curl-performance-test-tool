name: deploy-curl-performance-test

on:
  workflow_dispatch:
    inputs:
      accountid:
        description: 'ID of the AWS account to deploy into'
        required: true
      region:
        description: 'Target deployment region'
        required: true
        default: 'ap-southeast-2'

defaults:
  run:
    shell: bash

jobs:
  echo-parameters:
    name: parameters
    runs-on: ubuntu-20.04
    continue-on-error: false
    steps:
      - name: accountid ${{ github.event.inputs.accountid }}
        run: echo
      - name: region ${{ github.event.inputs.region }}
        run: echo

  lint:
    name: Run yamllint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Run yamllint
        run: yamllint -c ./.github/linters/.yaml-lint.yaml .github cloudformation

  deploy-curl-performance-test:
    name: Deploy curl performance test
    needs: [lint]
    runs-on: [self-hosted, linux, python3]
    env:
      AWS_REGION: ap-southeast-2
      AWS_ROLE_SESSION_NAME: GitHubActions
      region: ap-southeast-2

    steps:
      - uses: actions/checkout@v2

      - id: VpcInfo
        run: |
          if [[ "${{ github.event.inputs.accountid }}" == "123456789012" ]]
          then
            echo "::set-output name=vpcid::vpc-11111111"
            echo "::set-output name=subnetid1::subnet-11111111"
            echo "::set-output name=subnetid2::subnet-11111111"
          else
            echo "Error: ${{ github.event.inputs.accountid }} VPC info not found"
            exit 1
          fi

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.region }}
          role-duration-seconds: 3600
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::${{ env.accountid }}:role/k-ci-deploy

      - name: Deploy curl-performance-test-common stack to ${{ env.accountid }}
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          capabilities: CAPABILITY_NAMED_IAM
          name: curl-performance-test-common
          no-fail-on-empty-changeset: 1
          parameter-overrides: >-
            NotificationURL=TODO-EMAIL-ADDRESS
          template: ./cloudformation/curl-performance-test-common.yaml

      - name: Upload URL lists to S3
        run: |
          BUCKET_NAME=curl-performance-test-common-code-${{ env.accountid }}-${{ env.region }}
          aws s3 cp --region $AWS_REGION ./inputs/${{ env.accountid }}-${{ env.region }}.json s3://$BUCKET_NAME/inputs/

      - name: Package and upload Lambda Function
        id: LambdaPackage
        run: |
          BUCKET_NAME=curl-performance-test-common-code-${{ env.accountid }}-${{ env.region }}
          zip -j curl-performance-test-$(git rev-parse --short HEAD).zip ./lambda/curl_performance_test.py
          aws s3 cp --region $AWS_REGION curl-performance-test-$(git rev-parse --short HEAD).zip s3://$BUCKET_NAME/
          echo "::set-output name=S3Key::curl-performance-test-$(git rev-parse --short HEAD).zip"

      - name: Deploy curl-performance-test-main stack to ${{ env.accountid }}
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: curl-performance-test-main
          capabilities: CAPABILITY_NAMED_IAM
          no-fail-on-empty-changeset: 1
          parameter-overrides: >-
            ArtifactsBucketName=curl-performance-test-common-code-${{ env.accountid }}-${{ env.region }},
            CloudWatchCustomMetricNamespace=CurlPerformance,
            LambdaFunctionName=curl-performance-test,
            LambdaPackageS3Key=${{ steps.LambdaPackage.outputs.S3Key }},
            ScheduleExpression=rate(15 minutes),
            SubnetId1=${{ steps.VpcInfo.outputs.subnetid1 }},
            SubnetId2=${{ steps.VpcInfo.outputs.subnetid2 }},
            VpcId=${{ steps.VpcInfo.outputs.vpcid }}
          template: ./cloudformation/curl-performance-test-main.yaml

      - name: Deploy CloudWatch Dashboard
        run: |
          python3.8 -m venv env
          source env/bin/activate
          pip install -r scripts/requirements.txt
          python3 scripts/deploy_dashboard.py -n CurlPerformance -f ./inputs/${{ env.accountid }}-${{ env.region }}.json -r ${{ env.region }}
          deactivate
